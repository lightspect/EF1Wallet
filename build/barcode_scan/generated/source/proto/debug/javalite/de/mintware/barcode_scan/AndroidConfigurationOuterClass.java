// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: android_configuration.proto

package de.mintware.barcode_scan;

public final class AndroidConfigurationOuterClass {
  private AndroidConfigurationOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface AndroidConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:de.mintware.barcode_scan.AndroidConfiguration)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional double aspectTolerance = 1;</code>
     */
    double getAspectTolerance();

    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional bool useAutoFocus = 2;</code>
     */
    boolean getUseAutoFocus();
  }
  /**
   * Protobuf type {@code de.mintware.barcode_scan.AndroidConfiguration}
   */
  public  static final class AndroidConfiguration extends
      com.google.protobuf.GeneratedMessageLite<
          AndroidConfiguration, AndroidConfiguration.Builder> implements
      // @@protoc_insertion_point(message_implements:de.mintware.barcode_scan.AndroidConfiguration)
      AndroidConfigurationOrBuilder {
    private AndroidConfiguration() {
    }
    public static final int ASPECTTOLERANCE_FIELD_NUMBER = 1;
    private double aspectTolerance_;
    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional double aspectTolerance = 1;</code>
     */
    public double getAspectTolerance() {
      return aspectTolerance_;
    }
    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional double aspectTolerance = 1;</code>
     */
    private void setAspectTolerance(double value) {
      
      aspectTolerance_ = value;
    }
    /**
     * <pre>
     * You can optionally set aspect ratio tolerance level
     * that is used in calculating the optimal Camera preview size.
     * On several Huawei devices you need to set this to 0.5.
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional double aspectTolerance = 1;</code>
     */
    private void clearAspectTolerance() {
      
      aspectTolerance_ = 0D;
    }

    public static final int USEAUTOFOCUS_FIELD_NUMBER = 2;
    private boolean useAutoFocus_;
    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional bool useAutoFocus = 2;</code>
     */
    public boolean getUseAutoFocus() {
      return useAutoFocus_;
    }
    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional bool useAutoFocus = 2;</code>
     */
    private void setUseAutoFocus(boolean value) {
      
      useAutoFocus_ = value;
    }
    /**
     * <pre>
     * Set to true to enable auto focus
     * This parameter is only supported on Android devices.
     * </pre>
     *
     * <code>optional bool useAutoFocus = 2;</code>
     */
    private void clearUseAutoFocus() {
      
      useAutoFocus_ = false;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (aspectTolerance_ != 0D) {
        output.writeDouble(1, aspectTolerance_);
      }
      if (useAutoFocus_ != false) {
        output.writeBool(2, useAutoFocus_);
      }
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (aspectTolerance_ != 0D) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(1, aspectTolerance_);
      }
      if (useAutoFocus_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, useAutoFocus_);
      }
      memoizedSerializedSize = size;
      return size;
    }

    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code de.mintware.barcode_scan.AndroidConfiguration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration, Builder> implements
        // @@protoc_insertion_point(builder_implements:de.mintware.barcode_scan.AndroidConfiguration)
        de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfigurationOrBuilder {
      // Construct using de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <pre>
       * You can optionally set aspect ratio tolerance level
       * that is used in calculating the optimal Camera preview size.
       * On several Huawei devices you need to set this to 0.5.
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>optional double aspectTolerance = 1;</code>
       */
      public double getAspectTolerance() {
        return instance.getAspectTolerance();
      }
      /**
       * <pre>
       * You can optionally set aspect ratio tolerance level
       * that is used in calculating the optimal Camera preview size.
       * On several Huawei devices you need to set this to 0.5.
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>optional double aspectTolerance = 1;</code>
       */
      public Builder setAspectTolerance(double value) {
        copyOnWrite();
        instance.setAspectTolerance(value);
        return this;
      }
      /**
       * <pre>
       * You can optionally set aspect ratio tolerance level
       * that is used in calculating the optimal Camera preview size.
       * On several Huawei devices you need to set this to 0.5.
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>optional double aspectTolerance = 1;</code>
       */
      public Builder clearAspectTolerance() {
        copyOnWrite();
        instance.clearAspectTolerance();
        return this;
      }

      /**
       * <pre>
       * Set to true to enable auto focus
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>optional bool useAutoFocus = 2;</code>
       */
      public boolean getUseAutoFocus() {
        return instance.getUseAutoFocus();
      }
      /**
       * <pre>
       * Set to true to enable auto focus
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>optional bool useAutoFocus = 2;</code>
       */
      public Builder setUseAutoFocus(boolean value) {
        copyOnWrite();
        instance.setUseAutoFocus(value);
        return this;
      }
      /**
       * <pre>
       * Set to true to enable auto focus
       * This parameter is only supported on Android devices.
       * </pre>
       *
       * <code>optional bool useAutoFocus = 2;</code>
       */
      public Builder clearUseAutoFocus() {
        copyOnWrite();
        instance.clearUseAutoFocus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:de.mintware.barcode_scan.AndroidConfiguration)
    }
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration();
        }
        case IS_INITIALIZED: {
          return DEFAULT_INSTANCE;
        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration other = (de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration) arg1;
          aspectTolerance_ = visitor.visitDouble(aspectTolerance_ != 0D, aspectTolerance_,
              other.aspectTolerance_ != 0D, other.aspectTolerance_);
          useAutoFocus_ = visitor.visitBoolean(useAutoFocus_ != false, useAutoFocus_,
              other.useAutoFocus_ != false, other.useAutoFocus_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!input.skipField(tag)) {
                    done = true;
                  }
                  break;
                }
                case 9: {

                  aspectTolerance_ = input.readDouble();
                  break;
                }
                case 16: {

                  useAutoFocus_ = input.readBool();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:de.mintware.barcode_scan.AndroidConfiguration)
    private static final de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new AndroidConfiguration();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static de.mintware.barcode_scan.AndroidConfigurationOuterClass.AndroidConfiguration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<AndroidConfiguration> PARSER;

    public static com.google.protobuf.Parser<AndroidConfiguration> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
